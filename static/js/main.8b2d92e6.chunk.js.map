{"version":3,"sources":["components/Pages/HomePage/HomePage.tsx","PersonLink/PersonLink.tsx","components/PeopleTable.tsx","api.ts","components/Loader/Loader.tsx","components/Pages/PeoplePage/PeoplePage.tsx","components/Pages/NotFoundPage/NotFoundPage.tsx","components/PageNavLink.tsx","components/Navigation/Navigation.tsx","App.tsx","index.tsx"],"names":["HomePage","className","PersonLink","person","name","slug","sex","to","classNames","PeopleTable","personId","peoples","map","people","born","died","fatherName","motherName","mother","find","father","API_URL","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","ok","Error","status","statusText","json","Loader","PeoplePage","math","useMatch","peopleId","params","useState","setPeoples","isLoader","setIsLoader","isError","setIsError","loadPeoplesData","peoplesData","useEffect","length","NotFoundPage","PageNavLink","text","isActive","Navigation","role","App","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.8b2d92e6.chunk.js","sourcesContent":["export const HomePage = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","import classNames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../types';\n\ntype Props = {\n  person: Person,\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  const { name, slug, sex } = person;\n\n  return (\n    <Link\n      to={`/people/${slug}`}\n      className={classNames(\n        { 'has-text-danger': sex === 'f' },\n      )}\n    >\n      {name}\n    </Link>\n  );\n};\n","import classNames from 'classnames';\nimport { PersonLink } from '../PersonLink/PersonLink';\nimport { Person } from '../types';\n\ntype Props = {\n  personId: string,\n  peoples: Person[],\n};\n\nexport const PeopleTable: React.FC<Props> = ({ personId, peoples }) => {\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {peoples.map((people) => {\n          const {\n            sex,\n            born,\n            died,\n            fatherName,\n            motherName,\n            slug,\n          } = people;\n\n          const mother = peoples.find((person) => person.name === motherName);\n          const father = peoples.find((person) => person.name === fatherName);\n\n          return (\n            <tr\n              key={slug}\n              data-cy=\"person\"\n              className={classNames(\n                { 'has-background-warning': slug === personId },\n              )}\n            >\n              <td>\n                <PersonLink person={people} />\n              </td>\n\n              <td>{sex}</td>\n              <td>{born}</td>\n              <td>{died}</td>\n\n              <td>\n                {mother ? (\n                  <PersonLink person={mother} />\n                ) : (\n                  motherName || '-'\n                )}\n              </td>\n\n              <td>\n                {father ? (\n                  <PersonLink person={father} />\n                ) : (\n                  fatherName || '-'\n                )}\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => {\n      if (!response.ok) {\n        throw Error(`${response.status} - ${response.statusText}`);\n      }\n\n      return response.json();\n    });\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { useMatch } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { PeopleTable } from '../../PeopleTable';\nimport { getPeople } from '../../../api';\nimport { Loader } from '../../Loader';\nimport { Person } from '../../../types';\n\nexport const PeoplePage = () => {\n  const math = useMatch('/people/:personId');\n  const peopleId = math?.params.personId || '';\n\n  const [peoples, setPeoples] = useState<Person[]>([]);\n  const [isLoader, setIsLoader] = useState(false);\n  const [isError, setIsError] = useState(false);\n\n  const loadPeoplesData = async () => {\n    try {\n      setIsLoader(true);\n      const peoplesData = await getPeople();\n\n      setPeoples(peoplesData);\n    } catch {\n      setIsError(true);\n    } finally {\n      setIsLoader(false);\n    }\n  };\n\n  useEffect(() => {\n    loadPeoplesData();\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoader ? (\n            <Loader />\n\n          ) : (\n            <>\n              {isError ? (\n                <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n                  Something went wrong\n                </p>\n              ) : (\n                <PeopleTable personId={peopleId} peoples={peoples} />\n              )}\n\n              {!peoples.length && (\n                <p data-cy=\"noPeopleMessage\">\n                  There are no people on the server\n                </p>\n              )}\n            </>\n          )}\n\n        </div>\n      </div>\n    </>\n  );\n};\n","export const NotFoundPage = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import classNames from 'classnames';\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\n\ntype Props = {\n  to: string,\n  text: string\n};\n\nexport const PageNavLink: React.FC<Props> = ({ to, text }) => (\n  <NavLink\n    className={({ isActive }) => classNames(\n      'navbar-item', { 'has-background-grey-lighter': isActive },\n    )}\n    to={`${to}`}\n  >\n    {text}\n  </NavLink>\n);\n","import { PageNavLink } from '../PageNavLink';\n\nexport const Navigation = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <PageNavLink to=\"/\" text=\"Home\" />\n        <PageNavLink to=\"/people\" text=\"People\" />\n      </div>\n    </div>\n  </nav>\n\n);\n","import { Navigate, Route, Routes } from 'react-router-dom';\nimport { HomePage } from './components/Pages/HomePage/HomePage';\nimport { PeoplePage } from './components/Pages/PeoplePage/PeoplePage';\nimport { NotFoundPage } from './components/Pages/NotFoundPage/NotFoundPage';\nimport { Navigation } from './components/Navigation/Navigation';\nimport './App.scss';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <Navigation />\n\n    <main className=\"section\">\n      <div className=\"container\">\n\n        <Routes>\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n\n          <Route path=\"/people\">\n            <Route index element={<PeoplePage />} />\n            <Route path=\":personId\" element={<PeoplePage />} />\n          </Route>\n\n          <Route path=\"*\" element={<NotFoundPage />} />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}